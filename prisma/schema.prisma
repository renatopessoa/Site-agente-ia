// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  appointments Appointment[]
  
  @@map("users")
}

model Hospital {
  id          String   @id @default(cuid())
  name        String
  address     String?
  phone       String?
  email       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  appointments Appointment[]
  services     Service[]
  
  @@map("hospitals")
}

model Service {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Float?
  duration    Int?     // em minutos
  hospitalId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  hospital     Hospital @relation(fields: [hospitalId], references: [id])
  appointments Appointment[]
  
  @@map("services")
}

model Appointment {
  id          String            @id @default(cuid())
  userId      String
  hospitalId  String
  serviceId   String
  dateTime    DateTime
  status      AppointmentStatus @default(PENDING)
  notes       String?
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  
  user     User     @relation(fields: [userId], references: [id])
  hospital Hospital @relation(fields: [hospitalId], references: [id])
  service  Service  @relation(fields: [serviceId], references: [id])
  
  @@map("appointments")
}

model Lead {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  company   String?
  message   String?
  source    String?  // origem do lead (landing page, whatsapp, etc)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("leads")
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}